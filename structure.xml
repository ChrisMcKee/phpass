<?xml version="1.0"?>
<project version="0.15.0" title="PHPass">
  <file path="Phpass.php" hash="5ea5acdf0875af0a54bd6d746631cea0" package="PHPass">
    <docblock>
      <description>Portable PHP password hashing framework.</description>
      <long-description>
</long-description>
      <tag line="2" name="package" description="PHPass"/>
      <tag line="2" name="category" description="Cryptography"/>
      <tag line="2" name="author" description="Solar Designer &lt;solar at openwall.com&gt;"/>
      <tag line="2" name="author" description="Ryan Chouinard &lt;rchouinard at gmail.com&gt;"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.html MIT License"/>
      <tag line="2" name="link" description="Original phpass project page." link="http://www.openwall.com/phpass/"/>
      <tag line="2" name="link" description="PHPass project at GitHub." link="https://github.com/rchouinard/phpass"/>
    </docblock>
    <namespace-alias name="InvalidArgumentException">Phpass\Exception\InvalidArgumentException</namespace-alias>
    <namespace-alias name="RuntimeException">Phpass\Exception\RuntimeException</namespace-alias>
    <namespace-alias name="UnexpectedValueException">Phpass\Exception\UnexpectedValueException</namespace-alias>
    <include type="Require Once" line="21">
      <name>Phpass/Adapter/Base.php</name>
    </include>
    <include type="Require Once" line="26">
      <name>Phpass/Exception/InvalidArgumentException.php</name>
    </include>
    <include type="Require Once" line="31">
      <name>Phpass/Exception/RuntimeException.php</name>
    </include>
    <include type="Require Once" line="36">
      <name>Phpass/Exception/UnexpectedValueException.php</name>
    </include>
    <class final="false" abstract="false" line="49" namespace="default" package="PHPass">
      <name>Phpass</name>
      <extends/>
      <full_name>\Phpass</full_name>
      <docblock>
        <description>Portable PHP password hashing framework.</description>
        <long-description>
</long-description>
        <tag line="38" name="package" description="PHPass"/>
        <tag line="38" name="category" description="Cryptography"/>
        <tag line="38" name="author" description="Solar Designer &lt;solar at openwall.com&gt;"/>
        <tag line="38" name="author" description="Ryan Chouinard &lt;rchouinard at gmail.com&gt;"/>
        <tag line="38" name="license" description="http://www.opensource.org/licenses/mit-license.html MIT License"/>
        <tag line="38" name="link" description="Original phpass project page." link="http://www.openwall.com/phpass/"/>
        <tag line="38" name="link" description="PHPass project at GitHub." link="https://github.com/rchouinard/phpass"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="62" package="Default">
        <name>$_adapter</name>
        <default/>
        <docblock>
          <description>Instance of adapter to use for hashing.</description>
          <long-description>&lt;p&gt;Defaults to an instance of Phpass\Adapter\Blowfish configured with
iterationCountLog2 set to 12 if none is given otherwise.&lt;/p&gt;
</long-description>
          <tag line="52" name="see" description="\Phpass::setAdapter()" refers="\Phpass::setAdapter()"/>
          <tag line="52" name="see" description="\Phpass::setOptions()" refers="\Phpass::setOptions()"/>
          <tag line="52" name="var" description="" type="\Phpass\Adapter">
            <type by_reference="false">\Phpass\Adapter</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="73" package="Default">
        <name>$_hmacAlgo</name>
        <default/>
        <docblock>
          <description>Algorithm to use with HMAC.</description>
          <long-description>&lt;p&gt;Defaults to sha256 if not otherwise specified.&lt;/p&gt;
</long-description>
          <tag line="64" name="see" description="\Phpass::setOptions()" refers="\Phpass::setOptions()"/>
          <tag line="64" name="see" description="\Phpass::$_hmacKey" refers="\Phpass::$_hmacKey"/>
          <tag line="64" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="86" package="Default">
        <name>$_hmacKey</name>
        <default/>
        <docblock>
          <description>Key to use with HMAC.</description>
          <long-description>&lt;p&gt;If set, the password string given to either Phpass::hashPassword()
or Phpass::checkPassword() is passed through hash_hmac() before
it is passed to the adapter.&lt;/p&gt;
</long-description>
          <tag line="75" name="see" description="\Phpass::setOptions()" refers="\Phpass::setOptions()"/>
          <tag line="75" name="see" description="\Phpass::$_hmacAlgo" refers="\Phpass::$_hmacAlgo"/>
          <tag line="75" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="148" package="Default">
        <name>__construct</name>
        <docblock>
          <description>Class constructor.</description>
          <long-description>&lt;p&gt;There are three ways to configure the class via the constructor.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Pass an associative array containing class options as the first
argument to the constructor.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;?php
$phpass = new Phpass(array (
    'adapter' =&amp;gt; array (
        'type' =&amp;gt; 'blowfish',
        'options' =&amp;gt; array (
            'iterationCountLog2' =&amp;gt; 12
        )
    ),
    'hmacAlgo' =&amp;gt; 'sha256',
    'hmacKey' =&amp;gt; 'mySuperSecretKey'
));
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Pass a pre-configured adapter as the first argument to the
constructor. This method blocks passing non-adapter options to the
class via the constructor, though. Developers would need to call
Phpass::setOptions() in order to do so.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;?php
$adapter = new Phpass\Adapter\Blowfish(array (
    'iterationCountLog2' =&amp;gt; 12
));
$phpass = new Phpass($adapter);
$phpass-&amp;gt;setOptions(array (
    'hmacAlgo' =&amp;gt; 'sha256',
    'hmacKey' =&amp;gt; 'mySuperSecretKey'
));
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Pass a string representing the name of an adapter as the first
constructor argument, and an associative array of adapter options as
the second. This method also necessitates the use of
Phpass::setOptions() in order to pass class options.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;?php
$phpass = new Phpass('blowfish', array (
    'iterationCountLog2' =&amp;gt; 12
));
$phpass-&amp;gt;setOptions(array (
    'hmacAlgo' =&amp;gt; 'sha256',
    'hmacKey' =&amp;gt; 'mySuperSecretKey'
));
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
</long-description>
          <tag line="88" name="see" description="\Phpass::setOptions()" refers="\Phpass::setOptions()"/>
          <tag line="88" name="param" description="Either an associative array of options, a string naming an adapter, or an instance of a class implementing Phpass\Adapter." type="array|\Phpass\Adapter|string" variable="$options">
            <type by_reference="false">array</type>
            <type by_reference="false">\Phpass\Adapter</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="88" name="param" description="Optional; If the first argument is a string, the second should be an associative array of adapter options." type="array" variable="$adapterOptions">
            <type by_reference="false">array</type>
          </tag>
          <tag line="88" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="88" name="throws" description="Thrown if $options isn't valid." type="\Phpass\Exception\InvalidArgumentException">
            <type by_reference="false">\Phpass\Exception\InvalidArgumentException</type>
          </tag>
        </docblock>
        <argument line="148">
          <name>$options</name>
          <default>array ()</default>
          <type/>
        </argument>
        <argument line="148">
          <name>$adapterOptions</name>
          <default>array ()</default>
          <type>Array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="216" package="Default">
        <name>setOptions</name>
        <docblock>
          <description>Set class options.</description>
          <long-description>&lt;p&gt;&lt;dt&gt;adapter&lt;/dt&gt;
  &lt;dd&gt;Optional; Either an instance of a class which implements
  Phpass\Adapter or an associative array. The array should contain at
  least a 'type' key with the name of an adapter as a string. An
  'options' key may also be specified, containing an associative array
  of adapter options. See Phpass\Adapter\Base::setOptions() for
  details.&lt;/dd&gt;&lt;/p&gt;

&lt;p&gt;&lt;dt&gt;hmacKey&lt;/dt&gt;
  &lt;dd&gt;Optional; Key used to generate HMAC hashes. If omitted, HMAC
  hashing is disabled.&lt;/dd&gt;&lt;/p&gt;

&lt;p&gt;&lt;dt&gt;hmacAlgo&lt;/dt&gt;
  &lt;dd&gt;Optional; String naming one of the many hashing algorithms
  available. A full list may be retrieved from the hash_algos()
  function. Defaults to sha256.&lt;/dd&gt;&lt;/p&gt;
</long-description>
          <tag line="184" name="see" description="\Phpass\Adapter\Base::setOptions()" refers="\Phpass\Adapter\Base::setOptions()"/>
          <tag line="184" name="param" description="An associative array containing class options." type="array" variable="$options">
            <type by_reference="false">array</type>
          </tag>
          <tag line="184" name="return" description="Instance of Phpass for chaining." type="\Phpass">
            <type by_reference="false">\Phpass</type>
          </tag>
          <tag line="184" name="throws" description="Thrown if an HMAC key has been provided, but the required hash extension isn't loaded." type="\Phpass\Exception\RuntimeException">
            <type by_reference="false">\Phpass\Exception\RuntimeException</type>
          </tag>
          <tag line="184" name="throws" description="Thrown if an HMAC key has been provided, but the chosen algorithm isn't supported on the system." type="\Phpass\Exception\InvalidArgumentException">
            <type by_reference="false">\Phpass\Exception\InvalidArgumentException</type>
          </tag>
        </docblock>
        <argument line="216">
          <name>$options</name>
          <default/>
          <type>Array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="252" package="Default">
        <name>getAdapter</name>
        <docblock>
          <description>Get the currently configured adapter instance.</description>
          <long-description>
</long-description>
          <tag line="244" name="return" description="Instance of a class which implements Phpass\Adapter." type="\Phpass\Adapter">
            <type by_reference="false">\Phpass\Adapter</type>
          </tag>
          <tag line="244" name="throws" description="Thrown if no adapter is configured." type="\Phpass\Exception\RuntimeException">
            <type by_reference="false">\Phpass\Exception\RuntimeException</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="275" package="Default">
        <name>setAdapter</name>
        <docblock>
          <description>Set a configured adapter instance.</description>
          <long-description>
</long-description>
          <tag line="261" name="param" description="Either a string naming an adapter or an instance of a class implementing Phpass\Adapter." type="\Phpass\Adapter|string" variable="$adapter">
            <type by_reference="false">\Phpass\Adapter</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="261" name="param" description="Optional; If the first argument is a string, the second should be an associative array of adapter options." type="array" variable="$options">
            <type by_reference="false">array</type>
          </tag>
          <tag line="261" name="return" description="Instance of Phpass for chaining." type="\Phpass">
            <type by_reference="false">\Phpass</type>
          </tag>
          <tag line="261" name="throws" description="Thrown if the adapter isn't supported on the system." type="\Phpass\Exception\RuntimeException">
            <type by_reference="false">\Phpass\Exception\RuntimeException</type>
          </tag>
        </docblock>
        <argument line="275">
          <name>$adapter</name>
          <default/>
          <type/>
        </argument>
        <argument line="275">
          <name>$options</name>
          <default>array ()</default>
          <type>Array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="300" package="Default">
        <name>checkPassword</name>
        <docblock>
          <description>Check that a password string matches a given hash.</description>
          <long-description>
</long-description>
          <tag line="290" name="param" description="The plain-text password string." type="string" variable="$password">
            <type by_reference="false">string</type>
          </tag>
          <tag line="290" name="param" description="The stored hash value to compare against." type="string" variable="$storedHash">
            <type by_reference="false">string</type>
          </tag>
          <tag line="290" name="return" description="True if password string matches the stored hash, false otherwise." type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="300">
          <name>$password</name>
          <default/>
          <type/>
        </argument>
        <argument line="300">
          <name>$storedHash</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="314" package="Default">
        <name>hashPassword</name>
        <docblock>
          <description>Generate a hash from a password string.</description>
          <long-description>
</long-description>
          <tag line="306" name="param" description="the plain-text password string." type="string" variable="$password">
            <type by_reference="false">string</type>
          </tag>
          <tag line="306" name="return" description="Hashed version of the password string." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="314">
          <name>$password</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="334" package="Default">
        <name>_crypt</name>
        <docblock>
          <description>Proxy method to Phpass\Adapter::crypt()</description>
          <long-description>&lt;p&gt;Additional processing of the password string is performed if
Phpass::$_hmacKey is set.&lt;/p&gt;
</long-description>
          <tag line="319" name="param" description="The plain-text password string." type="string" variable="$password">
            <type by_reference="false">string</type>
          </tag>
          <tag line="319" name="param" description="Optional; The salt or stored hash value used to generate a new hash." type="string" variable="$salt">
            <type by_reference="false">string</type>
          </tag>
          <tag line="319" name="return" description="Hashed version of the password string." type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="319" name="throws" description="Thrown if the adapter returns an invalid hash value." type="\Phpass\Exception\UnexpectedValueException">
            <type by_reference="false">\Phpass\Exception\UnexpectedValueException</type>
          </tag>
        </docblock>
        <argument line="334">
          <name>$password</name>
          <default/>
          <type/>
        </argument>
        <argument line="334">
          <name>$salt</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Phpass/Exception.php" hash="8d4ac1c3820ebf2ef841cd88fdc27e3a" package="PHPass\Exceptions">
    <docblock>
      <description>Portable PHP password hashing framework.</description>
      <long-description>
</long-description>
      <tag line="2" name="package" description="PHPass"/>
      <tag line="2" name="subpackage" description="Exceptions"/>
      <tag line="2" name="category" description="Cryptography"/>
      <tag line="2" name="author" description="Solar Designer &lt;solar at openwall.com&gt;"/>
      <tag line="2" name="author" description="Ryan Chouinard &lt;rchouinard at gmail.com&gt;"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.html MIT License"/>
      <tag line="2" name="link" description="Original phpass project page." link="http://www.openwall.com/phpass/"/>
      <tag line="2" name="link" description="PHPass project at GitHub." link="https://github.com/rchouinard/phpass"/>
    </docblock>
    <interface namespace="Phpass" line="32" package="PHPass\Exceptions">
      <name>Exception</name>
      <extends/>
      <full_name>\Phpass\Exception</full_name>
      <docblock>
        <description>Portable PHP password hashing framework.</description>
        <long-description>
</long-description>
        <tag line="20" name="package" description="PHPass"/>
        <tag line="20" name="subpackage" description="Exceptions"/>
        <tag line="20" name="category" description="Cryptography"/>
        <tag line="20" name="author" description="Solar Designer &lt;solar at openwall.com&gt;"/>
        <tag line="20" name="author" description="Ryan Chouinard &lt;rchouinard at gmail.com&gt;"/>
        <tag line="20" name="license" description="http://www.opensource.org/licenses/mit-license.html MIT License"/>
        <tag line="20" name="link" description="Original phpass project page." link="http://www.openwall.com/phpass/"/>
        <tag line="20" name="link" description="PHPass project at GitHub." link="https://github.com/rchouinard/phpass"/>
      </docblock>
    </interface>
  </file>
  <file path="Phpass/Exception/InvalidArgumentException.php" hash="3e3929eb56cc60fa4cc7d5d513bd753d" package="PHPass\Exceptions">
    <docblock>
      <description>Portable PHP password hashing framework.</description>
      <long-description>
</long-description>
      <tag line="2" name="package" description="PHPass"/>
      <tag line="2" name="subpackage" description="Exceptions"/>
      <tag line="2" name="category" description="Cryptography"/>
      <tag line="2" name="author" description="Solar Designer &lt;solar at openwall.com&gt;"/>
      <tag line="2" name="author" description="Ryan Chouinard &lt;rchouinard at gmail.com&gt;"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.html MIT License"/>
      <tag line="2" name="link" description="Original phpass project page." link="http://www.openwall.com/phpass/"/>
      <tag line="2" name="link" description="PHPass project at GitHub." link="https://github.com/rchouinard/phpass"/>
    </docblock>
    <namespace-alias name="Exception">Phpass\Exception</namespace-alias>
    <include type="Require Once" line="24">
      <name>Phpass/Exception.php</name>
    </include>
    <class final="false" abstract="false" line="38" namespace="Phpass\Exception" package="PHPass\Exceptions">
      <name>InvalidArgumentException</name>
      <extends>\InvalidArgumentException</extends>
      <full_name>\Phpass\Exception\InvalidArgumentException</full_name>
      <docblock>
        <description>Portable PHP password hashing framework.</description>
        <long-description>
</long-description>
        <tag line="26" name="package" description="PHPass"/>
        <tag line="26" name="subpackage" description="Exceptions"/>
        <tag line="26" name="category" description="Cryptography"/>
        <tag line="26" name="author" description="Solar Designer &lt;solar at openwall.com&gt;"/>
        <tag line="26" name="author" description="Ryan Chouinard &lt;rchouinard at gmail.com&gt;"/>
        <tag line="26" name="license" description="http://www.opensource.org/licenses/mit-license.html MIT License"/>
        <tag line="26" name="link" description="Original phpass project page." link="http://www.openwall.com/phpass/"/>
        <tag line="26" name="link" description="PHPass project at GitHub." link="https://github.com/rchouinard/phpass"/>
      </docblock>
      <implements>\Phpass\Exception</implements>
    </class>
  </file>
  <file path="Phpass/Exception/UnexpectedValueException.php" hash="29f31ce885f4bfe77e0b04c0221c58a2" package="PHPass\Exceptions">
    <docblock>
      <description>Portable PHP password hashing framework.</description>
      <long-description>
</long-description>
      <tag line="2" name="package" description="PHPass"/>
      <tag line="2" name="subpackage" description="Exceptions"/>
      <tag line="2" name="category" description="Cryptography"/>
      <tag line="2" name="author" description="Solar Designer &lt;solar at openwall.com&gt;"/>
      <tag line="2" name="author" description="Ryan Chouinard &lt;rchouinard at gmail.com&gt;"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.html MIT License"/>
      <tag line="2" name="link" description="Original phpass project page." link="http://www.openwall.com/phpass/"/>
      <tag line="2" name="link" description="PHPass project at GitHub." link="https://github.com/rchouinard/phpass"/>
    </docblock>
    <namespace-alias name="Exception">Phpass\Exception</namespace-alias>
    <include type="Require Once" line="24">
      <name>Phpass/Exception.php</name>
    </include>
    <class final="false" abstract="false" line="38" namespace="Phpass\Exception" package="PHPass\Exceptions">
      <name>UnexpectedValueException</name>
      <extends>\UnexpectedValueException</extends>
      <full_name>\Phpass\Exception\UnexpectedValueException</full_name>
      <docblock>
        <description>Portable PHP password hashing framework.</description>
        <long-description>
</long-description>
        <tag line="26" name="package" description="PHPass"/>
        <tag line="26" name="subpackage" description="Exceptions"/>
        <tag line="26" name="category" description="Cryptography"/>
        <tag line="26" name="author" description="Solar Designer &lt;solar at openwall.com&gt;"/>
        <tag line="26" name="author" description="Ryan Chouinard &lt;rchouinard at gmail.com&gt;"/>
        <tag line="26" name="license" description="http://www.opensource.org/licenses/mit-license.html MIT License"/>
        <tag line="26" name="link" description="Original phpass project page." link="http://www.openwall.com/phpass/"/>
        <tag line="26" name="link" description="PHPass project at GitHub." link="https://github.com/rchouinard/phpass"/>
      </docblock>
      <implements>\Phpass\Exception</implements>
    </class>
  </file>
  <file path="Phpass/Exception/RuntimeException.php" hash="d0c56291a96a2a8f681cf4defc1e7d2b" package="PHPass\Exceptions">
    <docblock>
      <description>Portable PHP password hashing framework.</description>
      <long-description>
</long-description>
      <tag line="2" name="package" description="PHPass"/>
      <tag line="2" name="subpackage" description="Exceptions"/>
      <tag line="2" name="category" description="Cryptography"/>
      <tag line="2" name="author" description="Solar Designer &lt;solar at openwall.com&gt;"/>
      <tag line="2" name="author" description="Ryan Chouinard &lt;rchouinard at gmail.com&gt;"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.html MIT License"/>
      <tag line="2" name="link" description="Original phpass project page." link="http://www.openwall.com/phpass/"/>
      <tag line="2" name="link" description="PHPass project at GitHub." link="https://github.com/rchouinard/phpass"/>
    </docblock>
    <namespace-alias name="Exception">Phpass\Exception</namespace-alias>
    <include type="Require Once" line="24">
      <name>Phpass/Exception.php</name>
    </include>
    <class final="false" abstract="false" line="38" namespace="Phpass\Exception" package="PHPass\Exceptions">
      <name>RuntimeException</name>
      <extends>\RuntimeException</extends>
      <full_name>\Phpass\Exception\RuntimeException</full_name>
      <docblock>
        <description>Portable PHP password hashing framework.</description>
        <long-description>
</long-description>
        <tag line="26" name="package" description="PHPass"/>
        <tag line="26" name="subpackage" description="Exceptions"/>
        <tag line="26" name="category" description="Cryptography"/>
        <tag line="26" name="author" description="Solar Designer &lt;solar at openwall.com&gt;"/>
        <tag line="26" name="author" description="Ryan Chouinard &lt;rchouinard at gmail.com&gt;"/>
        <tag line="26" name="license" description="http://www.opensource.org/licenses/mit-license.html MIT License"/>
        <tag line="26" name="link" description="Original phpass project page." link="http://www.openwall.com/phpass/"/>
        <tag line="26" name="link" description="PHPass project at GitHub." link="https://github.com/rchouinard/phpass"/>
      </docblock>
      <implements>\Phpass\Exception</implements>
    </class>
  </file>
  <file path="Phpass/Adapter/Portable.php" hash="7ecec51c3af00a70af88c30b90981639" package="PHPass\Adapters">
    <docblock>
      <description>Portable PHP password hashing framework.</description>
      <long-description>
</long-description>
      <tag line="2" name="package" description="PHPass"/>
      <tag line="2" name="subpackage" description="Adapters"/>
      <tag line="2" name="category" description="Cryptography"/>
      <tag line="2" name="author" description="Solar Designer &lt;solar at openwall.com&gt;"/>
      <tag line="2" name="author" description="Ryan Chouinard &lt;rchouinard at gmail.com&gt;"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.html MIT License"/>
      <tag line="2" name="link" description="Original phpass project page." link="http://www.openwall.com/phpass/"/>
      <tag line="2" name="link" description="PHPass project at GitHub." link="https://github.com/rchouinard/phpass"/>
    </docblock>
    <parse_markers>
      <critical line="40">No short description for method crypt</critical>
      <notice line="43">Argument $password is missing from the function Docblock</notice>
      <notice line="43">Argument $setting is missing from the function Docblock</notice>
      <critical line="90">No short description for method genSalt</critical>
      <notice line="93">Argument $input is missing from the function Docblock</notice>
      <critical line="106">No short description for method isSupported</critical>
      <critical line="114">No short description for method isValid</critical>
      <notice line="117">Argument $hash is missing from the function Docblock</notice>
    </parse_markers>
    <include type="Require Once" line="23">
      <name>Phpass/Adapter/Base.php</name>
    </include>
    <class final="false" abstract="false" line="37" namespace="Phpass\Adapter" package="PHPass\Adapters">
      <name>Portable</name>
      <extends>\Phpass\Adapter\Base</extends>
      <full_name>\Phpass\Adapter\Portable</full_name>
      <docblock>
        <description>Portable PHP password hashing framework.</description>
        <long-description>
</long-description>
        <tag line="25" name="package" description="PHPass"/>
        <tag line="25" name="subpackage" description="Adapters"/>
        <tag line="25" name="category" description="Cryptography"/>
        <tag line="25" name="author" description="Solar Designer &lt;solar at openwall.com&gt;"/>
        <tag line="25" name="author" description="Ryan Chouinard &lt;rchouinard at gmail.com&gt;"/>
        <tag line="25" name="license" description="http://www.opensource.org/licenses/mit-license.html MIT License"/>
        <tag line="25" name="link" description="Original phpass project page." link="http://www.openwall.com/phpass/"/>
        <tag line="25" name="link" description="PHPass project at GitHub." link="https://github.com/rchouinard/phpass"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" line="43" package="Default">
        <name>crypt</name>
        <docblock>
          <description/>
          <long-description>
</long-description>
          <tag line="40" name="see" description="\Phpass\Adapter::crypt()" refers="\Phpass\Adapter::crypt()"/>
        </docblock>
        <argument line="43">
          <name>$password</name>
          <default/>
          <type/>
        </argument>
        <argument line="43">
          <name>$setting</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="93" package="Default">
        <name>genSalt</name>
        <docblock>
          <description/>
          <long-description>
</long-description>
          <tag line="90" name="see" description="\Phpass\Adapter::genSalt()" refers="\Phpass\Adapter::genSalt()"/>
        </docblock>
        <argument line="93">
          <name>$input</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="109" package="Default">
        <name>isSupported</name>
        <docblock>
          <description/>
          <long-description>
</long-description>
          <tag line="106" name="see" description="\Phpass\Adapter::isSupported()" refers="\Phpass\Adapter::isSupported()"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="117" package="Default">
        <name>isValid</name>
        <docblock>
          <description/>
          <long-description>
</long-description>
          <tag line="114" name="see" description="\Phpass\Adapter::isValid()" refers="\Phpass\Adapter::isValid()"/>
        </docblock>
        <argument line="117">
          <name>$hash</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Phpass/Adapter/ExtDes.php" hash="711ad2e2c8731361704aa828c96b6a42" package="PHPass\Adapters">
    <docblock>
      <description>Portable PHP password hashing framework.</description>
      <long-description>
</long-description>
      <tag line="2" name="package" description="PHPass"/>
      <tag line="2" name="subpackage" description="Adapters"/>
      <tag line="2" name="category" description="Cryptography"/>
      <tag line="2" name="author" description="Solar Designer &lt;solar at openwall.com&gt;"/>
      <tag line="2" name="author" description="Ryan Chouinard &lt;rchouinard at gmail.com&gt;"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.html MIT License"/>
      <tag line="2" name="link" description="Original phpass project page." link="http://www.openwall.com/phpass/"/>
      <tag line="2" name="link" description="PHPass project at GitHub." link="https://github.com/rchouinard/phpass"/>
    </docblock>
    <parse_markers>
      <critical line="40">No short description for method genSalt</critical>
      <notice line="43">Argument $input is missing from the function Docblock</notice>
      <critical line="65">No short description for method isSupported</critical>
      <critical line="73">No short description for method isValid</critical>
      <notice line="76">Argument $hash is missing from the function Docblock</notice>
    </parse_markers>
    <include type="Require Once" line="23">
      <name>Phpass/Adapter/Base.php</name>
    </include>
    <class final="false" abstract="false" line="37" namespace="Phpass\Adapter" package="PHPass\Adapters">
      <name>ExtDes</name>
      <extends>\Phpass\Adapter\Base</extends>
      <full_name>\Phpass\Adapter\ExtDes</full_name>
      <docblock>
        <description>Portable PHP password hashing framework.</description>
        <long-description>
</long-description>
        <tag line="25" name="package" description="PHPass"/>
        <tag line="25" name="subpackage" description="Adapters"/>
        <tag line="25" name="category" description="Cryptography"/>
        <tag line="25" name="author" description="Solar Designer &lt;solar at openwall.com&gt;"/>
        <tag line="25" name="author" description="Ryan Chouinard &lt;rchouinard at gmail.com&gt;"/>
        <tag line="25" name="license" description="http://www.opensource.org/licenses/mit-license.html MIT License"/>
        <tag line="25" name="link" description="Original phpass project page." link="http://www.openwall.com/phpass/"/>
        <tag line="25" name="link" description="PHPass project at GitHub." link="https://github.com/rchouinard/phpass"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" line="43" package="Default">
        <name>genSalt</name>
        <docblock>
          <description/>
          <long-description>
</long-description>
          <tag line="40" name="see" description="\Phpass\Adapter::genSalt()" refers="\Phpass\Adapter::genSalt()"/>
        </docblock>
        <argument line="43">
          <name>$input</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="68" package="Default">
        <name>isSupported</name>
        <docblock>
          <description/>
          <long-description>
</long-description>
          <tag line="65" name="see" description="\Phpass\Adapter::isSupported()" refers="\Phpass\Adapter::isSupported()"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="76" package="Default">
        <name>isValid</name>
        <docblock>
          <description/>
          <long-description>
</long-description>
          <tag line="73" name="see" description="\Phpass\Adapter\PhpassAdapter::isValid()" refers="\Phpass\Adapter\PhpassAdapter::isValid()"/>
        </docblock>
        <argument line="76">
          <name>$hash</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Phpass/Adapter/Base.php" hash="f997263cce89c2599ae6a6b8a298e825" package="PHPass\Adapters">
    <docblock>
      <description>Portable PHP password hashing framework.</description>
      <long-description>
</long-description>
      <tag line="2" name="package" description="PHPass"/>
      <tag line="2" name="subpackage" description="Adapters"/>
      <tag line="2" name="category" description="Cryptography"/>
      <tag line="2" name="author" description="Solar Designer &lt;solar at openwall.com&gt;"/>
      <tag line="2" name="author" description="Ryan Chouinard &lt;rchouinard at gmail.com&gt;"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.html MIT License"/>
      <tag line="2" name="link" description="Original phpass project page." link="http://www.openwall.com/phpass/"/>
      <tag line="2" name="link" description="PHPass project at GitHub." link="https://github.com/rchouinard/phpass"/>
    </docblock>
    <parse_markers>
      <critical line="107">No short description for method crypt</critical>
      <notice line="110">Argument $password is missing from the function Docblock</notice>
      <notice line="110">Argument $salt is missing from the function Docblock</notice>
    </parse_markers>
    <namespace-alias name="Adapter">Phpass\Adapter</namespace-alias>
    <namespace-alias name="InvalidArgumentException">Phpass\Exception\InvalidArgumentException</namespace-alias>
    <namespace-alias name="RuntimeException">Phpass\Exception\RuntimeException</namespace-alias>
    <include type="Require Once" line="26">
      <name>Phpass/Adapter.php</name>
    </include>
    <include type="Require Once" line="31">
      <name>Phpass/Exception/InvalidArgumentException.php</name>
    </include>
    <include type="Require Once" line="36">
      <name>Phpass/Exception/RuntimeException.php</name>
    </include>
    <class final="false" abstract="true" line="50" namespace="Phpass\Adapter" package="PHPass\Adapters">
      <name>Base</name>
      <extends/>
      <full_name>\Phpass\Adapter\Base</full_name>
      <docblock>
        <description>Portable PHP password hashing framework.</description>
        <long-description>
</long-description>
        <tag line="38" name="package" description="PHPass"/>
        <tag line="38" name="subpackage" description="Adapters"/>
        <tag line="38" name="category" description="Cryptography"/>
        <tag line="38" name="author" description="Solar Designer &lt;solar at openwall.com&gt;"/>
        <tag line="38" name="author" description="Ryan Chouinard &lt;rchouinard at gmail.com&gt;"/>
        <tag line="38" name="license" description="http://www.opensource.org/licenses/mit-license.html MIT License"/>
        <tag line="38" name="link" description="Original phpass project page." link="http://www.openwall.com/phpass/"/>
        <tag line="38" name="link" description="PHPass project at GitHub." link="https://github.com/rchouinard/phpass"/>
      </docblock>
      <implements>\Phpass\Adapter</implements>
      <property final="false" static="false" visibility="protected" line="67" package="Default">
        <name>$_iterationCountLog2</name>
        <default/>
        <docblock>
          <description>Binary logarithm value used in password stretching.</description>
          <long-description>&lt;p&gt;This number determines the cost of calculating hash values for the
various adapters. This value should be between 4 and 30, representing a
total cost of 2^x, or 16 and 1,073,741,824, respectively.&lt;/p&gt;

&lt;p&gt;Each adapter may treat this number differently. Generally, a calculated
value of 256 means that the password string is iteratively hashed 256
times, which increases the time and CPU cost associated with generating
the hash value.&lt;/p&gt;
</long-description>
          <tag line="53" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="74" package="Default">
        <name>$_itoa64</name>
        <default/>
        <docblock>
          <description>String of ASCII characters used in itoa64 operations.</description>
          <long-description>
</long-description>
          <tag line="69" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="84" package="Default">
        <name>$_randomState</name>
        <default/>
        <docblock>
          <description>Cached random data.</description>
          <long-description>&lt;p&gt;This value is used when better methods of generating random data are
unavailable.&lt;/p&gt;
</long-description>
          <tag line="76" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="94" package="Default">
        <name>__construct</name>
        <docblock>
          <description>Class constructor.</description>
          <long-description>
</long-description>
          <tag line="87" name="param" description="Optional; Associative array of adapter options." type="array" variable="$options">
            <type by_reference="false">array</type>
          </tag>
          <tag line="87" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="94">
          <name>$options</name>
          <default>array ()</default>
          <type>Array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="110" package="Default">
        <name>crypt</name>
        <docblock>
          <description/>
          <long-description>
</long-description>
          <tag line="107" name="see" description="\Phpass\Adapter::crypt()" refers="\Phpass\Adapter::crypt()"/>
        </docblock>
        <argument line="110">
          <name>$password</name>
          <default/>
          <type/>
        </argument>
        <argument line="110">
          <name>$salt</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="125" package="Default">
        <name>setOptions</name>
        <docblock>
          <description>Configure the adapter.</description>
          <long-description>
</long-description>
          <tag line="118" name="param" description="Associative array of adapter options." type="array" variable="$options">
            <type by_reference="false">array</type>
          </tag>
          <tag line="118" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="125">
          <name>$options</name>
          <default/>
          <type>Array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="149" package="Default">
        <name>_encode64</name>
        <docblock>
          <description>Encode binary data.</description>
          <long-description>
</long-description>
          <tag line="143" name="param" description="" type="string" variable="$input">
            <type by_reference="false">string</type>
          </tag>
          <tag line="143" name="param" description="" type="integer" variable="$count">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
        <argument line="149">
          <name>$input</name>
          <default/>
          <type/>
        </argument>
        <argument line="149">
          <name>$count</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="184" package="Default">
        <name>_getRandomBytes</name>
        <docblock>
          <description>Generate random data.</description>
          <long-description>
</long-description>
          <tag line="176" name="param" description="Number of bytes to generate." type="integer" variable="$count">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="176" name="return" description="String containg requisite number of random bytes." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="184">
          <name>$count</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="229" package="Default">
        <name>factory</name>
        <docblock>
          <description>Adapter factory.</description>
          <long-description>
</long-description>
          <tag line="215" name="param" description="String represnting an adapter name." type="string" variable="$adapter">
            <type by_reference="false">string</type>
          </tag>
          <tag line="215" name="param" description="Optional; Associative array of adapter options." type="array" variable="$options">
            <type by_reference="false">array</type>
          </tag>
          <tag line="215" name="return" description="Instance of a class which implements Phpass\Adapter." type="\Phpass\Adapter">
            <type by_reference="false">\Phpass\Adapter</type>
          </tag>
          <tag line="215" name="throws" description="Thrown when first argument is not a string." type="\Phpass\Exception\InvalidArgumentException">
            <type by_reference="false">\Phpass\Exception\InvalidArgumentException</type>
          </tag>
          <tag line="215" name="throws" description="Thrown when the adapter cannot be loaded." type="\Phpass\Exception\RuntimeException">
            <type by_reference="false">\Phpass\Exception\RuntimeException</type>
          </tag>
        </docblock>
        <argument line="229">
          <name>$adapter</name>
          <default/>
          <type/>
        </argument>
        <argument line="229">
          <name>$options</name>
          <default>array ()</default>
          <type>Array</type>
        </argument>
      </method>
    </class>
  </file>
  <file path="Phpass/Adapter/Pbkdf2.php" hash="6775692e0c0cd1704071168039bbe96a" package="PHPass\Adapters">
    <docblock>
      <description>Portable PHP password hashing framework.</description>
      <long-description>
</long-description>
      <tag line="2" name="package" description="PHPass"/>
      <tag line="2" name="subpackage" description="Adapters"/>
      <tag line="2" name="category" description="Cryptography"/>
      <tag line="2" name="author" description="Solar Designer &lt;solar at openwall.com&gt;"/>
      <tag line="2" name="author" description="Ryan Chouinard &lt;rchouinard at gmail.com&gt;"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.html MIT License"/>
      <tag line="2" name="link" description="Original phpass project page." link="http://www.openwall.com/phpass/"/>
      <tag line="2" name="link" description="PHPass project at GitHub." link="https://github.com/rchouinard/phpass"/>
    </docblock>
    <parse_markers>
      <critical line="61">No short description for method __construct</critical>
      <notice line="64">Argument $options is missing from the function Docblock</notice>
      <critical line="72">No short description for method crypt</critical>
      <notice line="75">Argument $password is missing from the function Docblock</notice>
      <notice line="75">Argument $setting is missing from the function Docblock</notice>
      <critical line="111">No short description for method genSalt</critical>
      <notice line="114">Argument $input is missing from the function Docblock</notice>
      <critical line="135">No short description for method isSupported</critical>
      <critical line="143">No short description for method isValid</critical>
      <notice line="146">Argument $hash is missing from the function Docblock</notice>
      <notice line="176">Name of argument $algo does not match with function Docblock</notice>
    </parse_markers>
    <namespace-alias name="InvalidArgumentException">Phpass\Exception\InvalidArgumentException</namespace-alias>
    <namespace-alias name="RuntimeException">Phpass\Exception\RuntimeException</namespace-alias>
    <include type="Require Once" line="25">
      <name>Phpass/Adapter/Base.php</name>
    </include>
    <include type="Require Once" line="30">
      <name>Phpass/Exception/InvalidArgumentException.php</name>
    </include>
    <include type="Require Once" line="35">
      <name>Phpass/Exception/RuntimeException.php</name>
    </include>
    <class final="false" abstract="false" line="49" namespace="Phpass\Adapter" package="PHPass\Adapters">
      <name>Pbkdf2</name>
      <extends>\Phpass\Adapter\Base</extends>
      <full_name>\Phpass\Adapter\Pbkdf2</full_name>
      <docblock>
        <description>Portable PHP password hashing framework.</description>
        <long-description>
</long-description>
        <tag line="37" name="package" description="PHPass"/>
        <tag line="37" name="subpackage" description="Adapters"/>
        <tag line="37" name="category" description="Cryptography"/>
        <tag line="37" name="author" description="Solar Designer &lt;solar at openwall.com&gt;"/>
        <tag line="37" name="author" description="Ryan Chouinard &lt;rchouinard at gmail.com&gt;"/>
        <tag line="37" name="license" description="http://www.opensource.org/licenses/mit-license.html MIT License"/>
        <tag line="37" name="link" description="Original phpass project page." link="http://www.openwall.com/phpass/"/>
        <tag line="37" name="link" description="PHPass project at GitHub." link="https://github.com/rchouinard/phpass"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="59" package="Default">
        <name>$_algo</name>
        <default/>
        <docblock>
          <description>Hashing algorithm used by the PBKDF2 implementation.</description>
          <long-description>&lt;p&gt;Defaults to sha256.&lt;/p&gt;
</long-description>
          <tag line="52" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="64" package="Default">
        <name>__construct</name>
        <docblock>
          <description/>
          <long-description>
</long-description>
          <tag line="61" name="see" description="\Phpass\Adapter\Base::__construct()" refers="\Phpass\Adapter\Base::__construct()"/>
        </docblock>
        <argument line="64">
          <name>$options</name>
          <default>array ()</default>
          <type>Array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="75" package="Default">
        <name>crypt</name>
        <docblock>
          <description/>
          <long-description>
</long-description>
          <tag line="72" name="see" description="\Phpass\Adapter\Base::crypt()" refers="\Phpass\Adapter\Base::crypt()"/>
        </docblock>
        <argument line="75">
          <name>$password</name>
          <default/>
          <type/>
        </argument>
        <argument line="75">
          <name>$setting</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="114" package="Default">
        <name>genSalt</name>
        <docblock>
          <description/>
          <long-description>
</long-description>
          <tag line="111" name="see" description="\Phpass\Adapter::genSalt()" refers="\Phpass\Adapter::genSalt()"/>
        </docblock>
        <argument line="114">
          <name>$input</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="138" package="Default">
        <name>isSupported</name>
        <docblock>
          <description/>
          <long-description>
</long-description>
          <tag line="135" name="see" description="\Phpass\Adapter::isSupported()" refers="\Phpass\Adapter::isSupported()"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="146" package="Default">
        <name>isValid</name>
        <docblock>
          <description/>
          <long-description>
</long-description>
          <tag line="143" name="see" description="\Phpass\Adapter::isValid()" refers="\Phpass\Adapter::isValid()"/>
        </docblock>
        <argument line="146">
          <name>$hash</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="176" package="Default">
        <name>_pbkdf2</name>
        <docblock>
          <description>Internal implementation of PKCS #5 v2.0.</description>
          <long-description>&lt;p&gt;This implementation passes tests using vectors given in RFC 6070 s.2,
PBKDF2 HMAC-SHA1 Test Vectors. Vectors given for PBKDF2 HMAC-SHA2 at
http://stackoverflow.com/questions/5130513 also pass.&lt;/p&gt;
</long-description>
          <tag line="156" name="param" description="The plain-text password string." type="string" variable="$password">
            <type by_reference="false">string</type>
          </tag>
          <tag line="156" name="param" description="Salt value used by the HMAC function." type="string" variable="$salt">
            <type by_reference="false">string</type>
          </tag>
          <tag line="156" name="param" description="Optional; Number of iterations for key stretching." type="integer" variable="$iterationCount">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="156" name="param" description="Optional; Length of derived key." type="integer" variable="$keyLength">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="156" name="param" description="Optional; Algorithm to use when generating HMAC digest." type="string" variable="$alog">
            <type by_reference="false">string</type>
          </tag>
          <tag line="156" name="return" description="Raw hash value." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="176">
          <name>$password</name>
          <default/>
          <type/>
        </argument>
        <argument line="176">
          <name>$salt</name>
          <default/>
          <type/>
        </argument>
        <argument line="176">
          <name>$iterationCount</name>
          <default>1000</default>
          <type/>
        </argument>
        <argument line="176">
          <name>$keyLength</name>
          <default>20</default>
          <type/>
        </argument>
        <argument line="176">
          <name>$algo</name>
          <default>'sha1'</default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Phpass/Adapter/Blowfish.php" hash="021f6db50b7637ece66796ba571ed60a" package="PHPass\Adapters">
    <docblock>
      <description>Portable PHP password hashing framework.</description>
      <long-description>
</long-description>
      <tag line="2" name="package" description="PHPass"/>
      <tag line="2" name="subpackage" description="Adapters"/>
      <tag line="2" name="category" description="Cryptography"/>
      <tag line="2" name="author" description="Solar Designer &lt;solar at openwall.com&gt;"/>
      <tag line="2" name="author" description="Ryan Chouinard &lt;rchouinard at gmail.com&gt;"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.html MIT License"/>
      <tag line="2" name="link" description="Original phpass project page." link="http://www.openwall.com/phpass/"/>
      <tag line="2" name="link" description="PHPass project at GitHub." link="https://github.com/rchouinard/phpass"/>
    </docblock>
    <parse_markers>
      <critical line="40">No short description for method __construct</critical>
      <notice line="43">Argument $options is missing from the function Docblock</notice>
      <critical line="49">No short description for method genSalt</critical>
      <notice line="52">Argument $input is missing from the function Docblock</notice>
      <critical line="92">No short description for method isSupported</critical>
      <critical line="100">No short description for method isValid</critical>
      <notice line="103">Argument $hash is missing from the function Docblock</notice>
    </parse_markers>
    <include type="Require Once" line="23">
      <name>Phpass/Adapter/Base.php</name>
    </include>
    <class final="false" abstract="false" line="37" namespace="Phpass\Adapter" package="PHPass\Adapters">
      <name>Blowfish</name>
      <extends>\Phpass\Adapter\Base</extends>
      <full_name>\Phpass\Adapter\Blowfish</full_name>
      <docblock>
        <description>Portable PHP password hashing framework.</description>
        <long-description>
</long-description>
        <tag line="25" name="package" description="PHPass"/>
        <tag line="25" name="subpackage" description="Adapters"/>
        <tag line="25" name="category" description="Cryptography"/>
        <tag line="25" name="author" description="Solar Designer &lt;solar at openwall.com&gt;"/>
        <tag line="25" name="author" description="Ryan Chouinard &lt;rchouinard at gmail.com&gt;"/>
        <tag line="25" name="license" description="http://www.opensource.org/licenses/mit-license.html MIT License"/>
        <tag line="25" name="link" description="Original phpass project page." link="http://www.openwall.com/phpass/"/>
        <tag line="25" name="link" description="PHPass project at GitHub." link="https://github.com/rchouinard/phpass"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" line="43" package="Default">
        <name>__construct</name>
        <docblock>
          <description/>
          <long-description>
</long-description>
          <tag line="40" name="see" description="\Phpass\Adapter\Base::__construct()" refers="\Phpass\Adapter\Base::__construct()"/>
        </docblock>
        <argument line="43">
          <name>$options</name>
          <default>array ()</default>
          <type>Array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="52" package="Default">
        <name>genSalt</name>
        <docblock>
          <description/>
          <long-description>
</long-description>
          <tag line="49" name="see" description="\Phpass\Adapter::genSalt()" refers="\Phpass\Adapter::genSalt()"/>
        </docblock>
        <argument line="52">
          <name>$input</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="95" package="Default">
        <name>isSupported</name>
        <docblock>
          <description/>
          <long-description>
</long-description>
          <tag line="92" name="see" description="\Phpass\Adapter::isSupported()" refers="\Phpass\Adapter::isSupported()"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="103" package="Default">
        <name>isValid</name>
        <docblock>
          <description/>
          <long-description>
</long-description>
          <tag line="100" name="see" description="\Phpass\Adapter::isValid()" refers="\Phpass\Adapter::isValid()"/>
        </docblock>
        <argument line="103">
          <name>$hash</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Phpass/Adapter.php" hash="b14e1dfbdc60cf5703d9754cd61956d2" package="PHPass\Adapters">
    <docblock>
      <description>Portable PHP password hashing framework.</description>
      <long-description>
</long-description>
      <tag line="2" name="package" description="PHPass"/>
      <tag line="2" name="subpackage" description="Adapters"/>
      <tag line="2" name="category" description="Cryptography"/>
      <tag line="2" name="author" description="Solar Designer &lt;solar at openwall.com&gt;"/>
      <tag line="2" name="author" description="Ryan Chouinard &lt;rchouinard at gmail.com&gt;"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.html MIT License"/>
      <tag line="2" name="link" description="Original phpass project page." link="http://www.openwall.com/phpass/"/>
      <tag line="2" name="link" description="PHPass project at GitHub." link="https://github.com/rchouinard/phpass"/>
    </docblock>
    <interface namespace="Phpass" line="32" package="PHPass\Adapters">
      <name>Adapter</name>
      <extends/>
      <full_name>\Phpass\Adapter</full_name>
      <docblock>
        <description>Portable PHP password hashing framework.</description>
        <long-description>
</long-description>
        <tag line="20" name="package" description="PHPass"/>
        <tag line="20" name="subpackage" description="Adapters"/>
        <tag line="20" name="category" description="Cryptography"/>
        <tag line="20" name="author" description="Solar Designer &lt;solar at openwall.com&gt;"/>
        <tag line="20" name="author" description="Ryan Chouinard &lt;rchouinard at gmail.com&gt;"/>
        <tag line="20" name="license" description="http://www.opensource.org/licenses/mit-license.html MIT License"/>
        <tag line="20" name="link" description="Original phpass project page." link="http://www.openwall.com/phpass/"/>
        <tag line="20" name="link" description="PHPass project at GitHub." link="https://github.com/rchouinard/phpass"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" line="45" package="Default">
        <name>crypt</name>
        <docblock>
          <description>Generate a hash based on the password string.</description>
          <long-description>
</long-description>
          <tag line="35" name="param" description="The plain-text password string." type="string" variable="$password">
            <type by_reference="false">string</type>
          </tag>
          <tag line="35" name="param" description="Optional; The salt or stored hash value used to generate a new hash." type="string" variable="$salt">
            <type by_reference="false">string</type>
          </tag>
          <tag line="35" name="return" description="Hashed version of the password string." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="45">
          <name>$password</name>
          <default/>
          <type/>
        </argument>
        <argument line="45">
          <name>$salt</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="55" package="Default">
        <name>genSalt</name>
        <docblock>
          <description>Generate a salt string suitable for use with the adapter.</description>
          <long-description>
</long-description>
          <tag line="47" name="param" description="Optional; Random data used to generate the salt." type="string" variable="$input">
            <type by_reference="false">string</type>
          </tag>
          <tag line="47" name="return" description="Generated salt string." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="55">
          <name>$input</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="65" package="Default">
        <name>isSupported</name>
        <docblock>
          <description>Check if the adapter is supported on the system.</description>
          <long-description>
</long-description>
          <tag line="58" name="return" description="True if the system has all the required dependencies to use the adapter, false otherwise." type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="75" package="Default">
        <name>isValid</name>
        <docblock>
          <description>Check if a hash is compatible with the adapter.</description>
          <long-description>
</long-description>
          <tag line="67" name="param" description="Password hash string." type="string" variable="$hash">
            <type by_reference="false">string</type>
          </tag>
          <tag line="67" name="return" description="True if the hash is compatible with the adapter, false otherwise." type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="75">
          <name>$hash</name>
          <default/>
          <type/>
        </argument>
      </method>
    </interface>
  </file>
  <package name="Default"/>
  <package name="PHPass">
    <package name="Adapters"/>
    <package name="Exceptions"/>
  </package>
  <namespace name="Phpass">
    <namespace name="Adapter"/>
    <namespace name="Exception"/>
  </namespace>
  <namespace name="default"/>
  <marker>todo</marker>
  <marker>fixme</marker>
</project>
